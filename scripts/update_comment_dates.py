#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Bitrix24.
–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞ VPS —Å–µ—Ä–≤–µ—Ä–µ —Å –ø—Ä—è–º—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫ MySQL.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python3 update_comment_dates.py '{"comment_id": "2025-07-08 14:22:00", ...}'
"""

import sys
import json
import pymysql
from datetime import datetime
from typing import Dict, Any

def connect_to_mysql() -> pymysql.Connection:
    """
    –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MySQL –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ /root/.my.cnf
    """
    try:
        # –ß–∏—Ç–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é MySQL
        connection = pymysql.connect(
            read_default_file='/root/.my.cnf',
            database='sitemanager',
            charset='utf8mb4',
            autocommit=False
        )
        return connection
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MySQL: {e}")
        sys.exit(1)

def update_comment_dates(comment_dates: Dict[str, str]) -> bool:
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞—Ç—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ b_forum_message
    
    Args:
        comment_dates: –°–ª–æ–≤–∞—Ä—å {comment_id: datetime_string}
        
    Returns:
        True –µ—Å–ª–∏ –≤—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ
    """
    if not comment_dates:
        print("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
        return True
    
    connection = None
    success_count = 0
    error_count = 0
    
    try:
        connection = connect_to_mysql()
        cursor = connection.cursor()
        
        print(f"üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞—Ç –¥–ª—è {len(comment_dates)} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤...")
        
        for comment_id, date_str in comment_dates.items():
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã
                try:
                    # –û–∂–∏–¥–∞–µ–º —Ñ–æ—Ä–º–∞—Ç ISO: 2025-07-08T14:22:00 –∏–ª–∏ MySQL: 2025-07-08 14:22:00
                    if 'T' in date_str:
                        # ISO —Ñ–æ—Ä–º–∞—Ç - –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ MySQL —Ñ–æ—Ä–º–∞—Ç
                        date_obj = datetime.fromisoformat(date_str.replace('Z', '+00:00'))
                        mysql_date = date_obj.strftime('%Y-%m-%d %H:%M:%S')
                    else:
                        # –£–∂–µ –≤ MySQL —Ñ–æ—Ä–º–∞—Ç–µ
                        mysql_date = date_str
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å
                        datetime.strptime(mysql_date, '%Y-%m-%d %H:%M:%S')
                except ValueError as e:
                    print(f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è {comment_id}: {date_str}")
                    error_count += 1
                    continue
                
                # SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞—Ç—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
                sql = """
                UPDATE b_forum_message 
                SET POST_DATE = %s 
                WHERE ID = %s
                """
                
                cursor.execute(sql, (mysql_date, int(comment_id)))
                
                if cursor.rowcount > 0:
                    print(f"‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π {comment_id}: –¥–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {mysql_date}")
                    success_count += 1
                else:
                    print(f"‚ö†Ô∏è –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π {comment_id}: –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
                    error_count += 1
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è {comment_id}: {e}")
                error_count += 1
                continue
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        connection.commit()
        
        print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {success_count}")
        print(f"‚ùå –û—à–∏–±–∫–∏: {error_count}")
        
        return error_count == 0
        
    except Exception as e:
        print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        if connection:
            connection.rollback()
        return False
        
    finally:
        if connection:
            connection.close()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) != 2:
        print("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python3 update_comment_dates.py '<json_data>'")
        print("–ü—Ä–∏–º–µ—Ä: python3 update_comment_dates.py '{\"601\": \"2025-07-08 14:22:00\"}'")
        sys.exit(1)
    
    try:
        # –ü–∞—Ä—Å–∏–º JSON –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
        json_data = sys.argv[1]
        comment_dates = json.loads(json_data)
        
        if not isinstance(comment_dates, dict):
            print("‚ùå JSON –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–±—ä–µ–∫—Ç–æ–º —Å –ø–∞—Ä–∞–º–∏ comment_id: datetime")
            sys.exit(1)
        
        print(f"üöÄ –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤...")
        print(f"üìù –ü–æ–ª—É—á–µ–Ω–æ {len(comment_dates)} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        success = update_comment_dates(comment_dates)
        
        if success:
            print("‚úÖ –í—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            sys.exit(0)
        else:
            print("‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏!")
            sys.exit(1)
            
    except json.JSONDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
        sys.exit(1)
    except Exception as e:
        print(f"üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main() 