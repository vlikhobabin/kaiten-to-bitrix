#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤ Kaiten –≤ –≥—Ä—É–ø–ø—ã Bitrix24.
–ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –ü–µ—Ä–µ–Ω–æ—Å–∏–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ (–ù–ï –¥–æ—Å–∫–∏!)
1. –ö–æ–Ω–µ—á–Ω—ã–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ (–±–µ–∑ –¥–æ—á–µ—Ä–Ω–∏—Ö) ‚Üí –≥—Ä—É–ø–ø—ã Bitrix24
2. –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ 2-–≥–æ —É—Ä–æ–≤–Ω—è (–µ—Å–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å –∏–º–µ–µ—Ç –¥–æ—á–µ—Ä–Ω–∏–µ) ‚Üí –≥—Ä—É–ø–ø—ã Bitrix24
3. –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤ –∏–∑ —Å–ø–∏—Å–∫–∞ (—Å–º. config/space_exclusions.py)

–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
    python scripts/board_migration.py --list-spaces    # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤
    python scripts/board_migration.py                  # –í—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞  
    python scripts/board_migration.py --limit 10       # –ü–µ—Ä–≤—ã–µ 10 –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    python scripts/board_migration.py --space-id 123   # –ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
"""

import asyncio
import argparse
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from migrators.space_migrator import SpaceMigrator
from utils.logger import get_logger

logger = get_logger(__name__)

async def main():
    parser = argparse.ArgumentParser(
        description="–ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤ Kaiten –≤ –≥—Ä—É–ø–ø—ã Bitrix24",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog="""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
  %(prog)s --list-spaces      # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤
  %(prog)s                    # –ú–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
  %(prog)s --limit 5          # –ú–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–≤—ã–µ 5 –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤ (—Ç–µ—Å—Ç)
  %(prog)s --limit 50         # –ú–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–≤—ã–µ 50 –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤
  %(prog)s --space-id 12345   # –ú–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ

–ù–û–í–ê–Ø –ª–æ–≥–∏–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:
  ‚Ä¢ –ù–ï –ø–µ—Ä–µ–Ω–æ—Å–∏–º –¥–æ—Å–∫–∏!
  ‚Ä¢ –ö–æ–Ω–µ—á–Ω—ã–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ (–±–µ–∑ –¥–æ—á–µ—Ä–Ω–∏—Ö) ‚Üí –≥—Ä—É–ø–ø—ã Bitrix24
  ‚Ä¢ –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ 2-–≥–æ —É—Ä–æ–≤–Ω—è ‚Üí –≥—Ä—É–ø–ø—ã Bitrix24
  ‚Ä¢ –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤ –∏–∑ config/space_exclusions.py
  ‚Ä¢ –£—á–∞—Å—Ç–Ω–∏–∫–∏: –∏–∑ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞

–ü–æ–ª–µ–∑–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞:
  –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ --list-spaces –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤,
  –∑–∞—Ç–µ–º –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–µ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏.
        """
    )
    
    parser.add_argument(
        '--limit', 
        type=int, 
        help='–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: –≤—Å–µ)'
    )
    
    parser.add_argument(
        '--space-id',
        type=int,
        help='ID –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ Kaiten –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 12345)'
    )
    
    parser.add_argument(
        '--list-spaces',
        action='store_true',
        help='–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ (–±–µ–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏)'
    )
    
    args = parser.parse_args()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∑–∞–∏–º–æ–∏—Å–∫–ª—é—á–∞—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    if args.list_spaces and (args.limit or args.space_id):
        logger.error("‚ùå –ü–∞—Ä–∞–º–µ—Ç—Ä --list-spaces –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å --limit –∏–ª–∏ --space-id")
        return 1
    
    # –†–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤
    if args.list_spaces:
        logger.info("üìã –ü–†–û–°–ú–û–¢–† –î–û–°–¢–£–ü–ù–´–• –ü–†–û–°–¢–†–ê–ù–°–¢–í")
        logger.info("=" * 70)
        
        try:
            migrator = SpaceMigrator()
            success = await migrator.list_available_spaces()
            return 0 if success else 1
        except Exception as e:
            logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            return 1
    
    # –†–µ–∂–∏–º –º–∏–≥—Ä–∞—Ü–∏–∏
    logger.info("üöÄ –ó–ê–ü–£–°–ö –ú–ò–ì–†–ê–¶–ò–ò –ü–†–û–°–¢–†–ê–ù–°–¢–í KAITEN -> BITRIX24")
    logger.info("üîÑ –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –ü–µ—Ä–µ–Ω–æ—Å–∏–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ (–ù–ï –¥–æ—Å–∫–∏!)")
    logger.info("=" * 70)
    
    if args.space_id:
        logger.info(f"üéØ –†–µ–∂–∏–º: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ ID {args.space_id}")
    elif args.limit:
        logger.info(f"üî¢ –õ–∏–º–∏—Ç: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ {args.limit} –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤")
    else:
        logger.info("üîÑ –†–µ–∂–∏–º: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –í–°–ï –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –º–∏–≥—Ä–∞—Ç–æ—Ä –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
        migrator = SpaceMigrator()
        stats = await migrator.migrate_spaces(limit=args.limit, space_id=args.space_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        if stats["errors"] > 0:
            logger.error("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏")
            return 1
        else:
            logger.success("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            return 0
            
    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return 1

if __name__ == "__main__":
    exit_code = asyncio.run(main())
    sys.exit(exit_code) 