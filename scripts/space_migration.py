#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤ –∏–∑ Kaiten –≤ —Ä–∞–±–æ—á–∏–µ –≥—Ä—É–ø–ø—ã Bitrix24.
–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–≤—ã–µ 5 –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.append(str(Path(__file__).parent.parent))

from migrators.space_migrator import SpaceMigrator
from utils.logger import logger

async def main():
    """–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤"""
    
    logger.info("üöÄ –ó–ê–ü–£–°–ö –ú–ò–ì–†–ê–¶–ò–ò –ü–†–û–°–¢–†–ê–ù–°–¢–í KAITEN -> BITRIX24")
    logger.info("=" * 70)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –º–∏–≥—Ä–∞—Ç–æ—Ä
        migrator = SpaceMigrator()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –≤ 5 –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤
        logger.info("üî¢ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤")
        result = await migrator.migrate_spaces(limit=5)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if "error" in result:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {result['error']}")
            return False
        
        # –í—ã–≤–æ–¥–∏–º –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É
        logger.info("=" * 70)
        logger.info("üìã –ö–†–ê–¢–ö–ê–Ø –°–í–û–î–ö–ê:")
        logger.info(f"  ‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {result.get('processed', 0)}")
        logger.info(f"  ‚ûï –°–æ–∑–¥–∞–Ω–æ: {result.get('created', 0)}")
        logger.info(f"  üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {result.get('updated', 0)}")
        logger.info(f"  üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–æ: {result.get('members_added', 0)}")
        logger.info(f"  ‚ùå –û—à–∏–±–æ–∫: {result.get('errors', 0)}")
        logger.info("=" * 70)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
        total = result.get('processed', 0)
        success = result.get('created', 0) + result.get('updated', 0)
        
        if total > 0 and success == total:
            logger.info("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        elif total > 0 and success > 0:
            logger.info("‚ö†Ô∏è –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å —á–∞—Å—Ç–∏—á–Ω—ã–º —É—Å–ø–µ—Ö–æ–º")
        else:
            logger.error("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏")
        
        return True
        
    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤: {e}")
        return False

if __name__ == "__main__":
    success = asyncio.run(main())
    if not success:
        sys.exit(1) 