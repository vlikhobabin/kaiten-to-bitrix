import asyncio
import sys
import json
from pathlib import Path
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.append(str(Path(__file__).parent.parent))

from connectors.kaiten_client import KaitenClient
from connectors.bitrix_client import BitrixClient
from transformers.user_transformer import UserTransformer
from config.settings import settings
from utils.logger import logger

async def main():
    """–ü–æ–ª–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Kaiten –≤ Bitrix24"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
    kaiten_client = KaitenClient()
    bitrix_client = BitrixClient()
    
    # –ú–∞–ø–ø–∏–Ω–≥ kaiten_user_id -> bitrix_user_id
    user_mapping = {}
    
    try:
        logger.info("üöÄ –ù–ê–ß–ò–ù–ê–ï–ú –ü–û–õ–ù–£–Æ –ú–ò–ì–†–ê–¶–ò–Æ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –ò–ó KAITEN –í BITRIX24")
        logger.info("=" * 80)
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Kaiten
        logger.info("üì• –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Kaiten...")
        kaiten_users = await kaiten_client.get_users()
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å email
        users_with_email = [user for user in kaiten_users if user.email and user.email.strip()]
        
        logger.info(f"üìä –ü–æ–ª—É—á–µ–Ω–æ {len(kaiten_users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Kaiten")
        logger.info(f"üìß –ò–∑ –Ω–∏—Ö {len(users_with_email)} –∏–º–µ—é—Ç email –∞–¥—Ä–µ—Å–∞")
        
        if not users_with_email:
            logger.warning("‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å email –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏!")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –í–°–ï–• –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Bitrix24 (–≤–∫–ª—é—á–∞—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö)
        logger.info("üì• –ü–æ–ª—É—á–µ–Ω–∏–µ –í–°–ï–• —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Bitrix24...")
        bitrix_users = await bitrix_client.get_users()  # –ë–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞ - –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö
        logger.info(f"üë• –í Bitrix24 —É–∂–µ –µ—Å—Ç—å {len(bitrix_users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤—Å–µ—Ö —Å—Ç–∞—Ç—É—Å–æ–≤)")
        
        # –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ Bitrix24
        transformer = UserTransformer(bitrix_users)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        stats = {
            'total_kaiten': len(kaiten_users),
            'with_email': len(users_with_email),
            'processed': 0,
            'created': 0, 
            'updated': 0,
            'skipped': 0,
            'errors': 0,
            'mapping_saved': 0
        }
        
        logger.info("=" * 80)
        logger.info(f"‚öôÔ∏è –û–ë–†–ê–ë–û–¢–ö–ê {len(users_with_email)} –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –° EMAIL...")
        logger.info("=" * 80)
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å email –∏–∑ Kaiten
        for i, kaiten_user in enumerate(users_with_email, 1):
            stats['processed'] += 1
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ
            if stats['processed'] % 10 == 0 or stats['processed'] == len(users_with_email):
                logger.info(f"üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {stats['processed']}/{len(users_with_email)} "
                           f"({stats['processed']/len(users_with_email)*100:.1f}%)")
                
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ Bitrix24
                existing_user = transformer.transform(kaiten_user)
                
                # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è Bitrix24
                user_data = transformer.kaiten_to_bitrix_data(kaiten_user)
                if not user_data:
                    logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è {kaiten_user.email}")
                    stats['errors'] += 1
                    continue
                
                bitrix_user = None
                
                if existing_user:
                    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ
                    logger.debug(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {kaiten_user.email}")
                    bitrix_user = await bitrix_client.update_user(existing_user.ID, user_data)
                    
                    if bitrix_user:
                        stats['updated'] += 1
                        # –ò—Å–ø–æ–ª—å–∑—É–µ–º ID —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        user_mapping[str(kaiten_user.id)] = str(existing_user.ID)
                        stats['mapping_saved'] += 1
                        logger.debug(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω: {kaiten_user.email} (Kaiten ID: {kaiten_user.id} -> Bitrix ID: {existing_user.ID})")
                    else:
                        stats['errors'] += 1
                        logger.warning(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {kaiten_user.email}")
                else:
                    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    logger.debug(f"‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {kaiten_user.email}")
                    bitrix_user = await bitrix_client.create_user(user_data)
                    
                    if bitrix_user:
                        stats['created'] += 1
                        user_mapping[str(kaiten_user.id)] = str(bitrix_user.ID)
                        stats['mapping_saved'] += 1
                        logger.debug(f"‚úÖ –°–æ–∑–¥–∞–Ω: {kaiten_user.email} (Kaiten ID: {kaiten_user.id} -> Bitrix ID: {bitrix_user.ID})")
                    else:
                        stats['errors'] += 1
                        logger.warning(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {kaiten_user.email}")
                        
            except Exception as e:
                logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {kaiten_user.email}: {e}")
                stats['errors'] += 1
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –º–∞–ø–ø–∏–Ω–≥ –≤ —Ñ–∞–π–ª
        mapping_file = Path(__file__).parent.parent / "mappings" / "user_mapping.json"
        mapping_file.parent.mkdir(exist_ok=True)
        
        # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        existing_mapping = {}
        existing_stats = {"created": 0, "updated": 0, "errors": 0}
        
        if mapping_file.exists():
            try:
                with open(mapping_file, 'r', encoding='utf-8') as f:
                    existing_data = json.load(f)
                    existing_mapping = existing_data.get("mapping", {})
                    existing_stats = existing_data.get("stats", existing_stats)
                logger.info(f"üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–∞–ø–ø–∏–Ω–≥: {len(existing_mapping)} –∑–∞–ø–∏—Å–µ–π")
            except Exception as e:
                logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –º–∞–ø–ø–∏–Ω–≥–∞: {e}")
        
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –º–∞–ø–ø–∏–Ω–≥–∏ (–Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–º–µ—é—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
        combined_mapping = {**existing_mapping, **user_mapping}
        
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        combined_stats = {
            "created": existing_stats["created"] + stats["created"],
            "updated": existing_stats["updated"] + stats["updated"], 
            "errors": existing_stats["errors"] + stats["errors"]
        }
        
        mapping_data = {
            "created_at": datetime.now().isoformat(),
            "description": "–ú–∞–ø–ø–∏–Ω–≥ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Kaiten -> Bitrix24",
            "stats": combined_stats,
            "mapping": combined_mapping
        }
        
        with open(mapping_file, 'w', encoding='utf-8') as f:
            json.dump(mapping_data, f, ensure_ascii=False, indent=2)
        
        logger.info(f"üíæ –ú–∞–ø–ø–∏–Ω–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {mapping_file}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ Bitrix24
        logger.info("üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–∑ Bitrix24...")
        final_bitrix_users = await bitrix_client.get_users()  # –í—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        
        # –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
        logger.info("=" * 80)
        logger.info("üéâ –ú–ò–ì–†–ê–¶–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –ó–ê–í–ï–†–®–ï–ù–ê!")
        logger.info("=" * 80)
        logger.info(f"üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ú–ò–ì–†–ê–¶–ò–ò:")
        logger.info(f"  üìã –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ Kaiten: {stats['total_kaiten']}")
        logger.info(f"  üìß –° email –∞–¥—Ä–µ—Å–∞–º–∏: {stats['with_email']}")
        logger.info(f"  ‚öôÔ∏è –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {stats['processed']}")
        logger.info(f"  ‚ûï –°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤—ã—Ö: {stats['created']}")
        logger.info(f"  üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö: {stats['updated']}")
        logger.info(f"  ‚ùå –û—à–∏–±–æ–∫: {stats['errors']}")
        logger.info(f"  üîó –ú–∞–ø–ø–∏–Ω–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {stats['mapping_saved']} –∑–∞–ø–∏—Å–µ–π")
        logger.info("")
        logger.info(f"üìà –†–ï–ó–£–õ–¨–¢–ê–¢ –í BITRIX24:")
        logger.info(f"  üë• –ë—ã–ª–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(bitrix_users)}")
        logger.info(f"  üë• –°—Ç–∞–ª–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(final_bitrix_users)}")
        logger.info(f"  ‚ûï –ü—Ä–∏—Ä–æ—Å—Ç: {len(final_bitrix_users) - len(bitrix_users)}")
        logger.info("=" * 80)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏
        success_rate = ((stats['created'] + stats['updated']) / stats['with_email']) * 100
        logger.info(f"‚úÖ –£–°–ü–ï–®–ù–û–°–¢–¨ –ú–ò–ì–†–ê–¶–ò–ò: {success_rate:.1f}%")
        
        if success_rate >= 95:
            logger.info("üèÜ –û–¢–õ–ò–ß–ù–û! –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
        elif success_rate >= 80:
            logger.info("üëç –•–û–†–û–®–û! –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –æ—à–∏–±–∫–∞–º–∏")
        else:
            logger.warning("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï! –ú–Ω–æ–≥–æ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞")
        
    except Exception as e:
        logger.error(f"üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ú–ò–ì–†–ê–¶–ò–ò: {e}")
        return

if __name__ == "__main__":
    asyncio.run(main()) 