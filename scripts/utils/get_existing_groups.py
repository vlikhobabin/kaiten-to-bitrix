#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—Å–µ—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –≥—Ä—É–ø–ø–∞—Ö –≤ Bitrix24
"""

import asyncio
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from connectors.bitrix_client import BitrixClient
from utils.logger import get_logger

logger = get_logger(__name__)

async def main():
    """–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –≥—Ä—É–ø–ø–∞—Ö"""
    bitrix = BitrixClient()
    
    logger.info("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–∞–±–æ—á–∏—Ö –≥—Ä—É–ø–ø –∏–∑ Bitrix24...")
    groups = await bitrix.get_workgroup_list()
    
    if not groups:
        logger.warning("‚ùå –ì—Ä—É–ø–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    logger.info(f"üìã –ù–∞–π–¥–µ–Ω–æ –≥—Ä—É–ø–ø: {len(groups)}")
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫—É —Å–æ–∑–¥–∞–Ω–∏—è
    space_groups = []  # ID 4-69
    board_groups = []  # ID 70+
    other_groups = []  # ID 1-3
    
    for group in groups:
        group_id = int(group.get('ID', 0))
        group_name = group.get('NAME', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
        
        if 4 <= group_id <= 69:
            space_groups.append((group_id, group_name))
        elif group_id >= 70:
            board_groups.append((group_id, group_name))
        else:
            other_groups.append((group_id, group_name))
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\n" + "="*80)
    print("üìä –ê–ù–ê–õ–ò–ó –°–£–©–ï–°–¢–í–£–Æ–©–ò–• –ì–†–£–ü–ü")
    print("="*80)
    
    if other_groups:
        print(f"\nüîµ –°–ò–°–¢–ï–ú–ù–´–ï –ì–†–£–ü–ü–´ (ID 1-3): {len(other_groups)} —à—Ç.")
        for group_id, name in sorted(other_groups):
            print(f"  {group_id}: {name}")
    
    if space_groups:
        print(f"\nüü° –ì–†–£–ü–ü–´ –û–¢ SPACE-–ú–ò–ì–†–ê–¶–ò–ò (ID 4-69): {len(space_groups)} —à—Ç.")
        print("   (—Å–æ–∑–¥–∞–Ω—ã –ø–æ —Å—Ç–∞—Ä–æ–π –ª–æ–≥–∏–∫–µ 1 Space = 1 Group)")
        for group_id, name in sorted(space_groups)[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
            print(f"  {group_id}: {name}")
        if len(space_groups) > 10:
            print(f"  ... –∏ –µ—â–µ {len(space_groups) - 10} –≥—Ä—É–ø–ø")
    
    if board_groups:
        print(f"\nüü¢ –ì–†–£–ü–ü–´ –û–¢ BOARD-–ú–ò–ì–†–ê–¶–ò–ò (ID 70+): {len(board_groups)} —à—Ç.")
        print("   (—Å–æ–∑–¥–∞–Ω—ã –ø–æ –Ω–æ–≤–æ–π –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–µ 1 Board = 1 Group)")
        for group_id, name in sorted(board_groups):
            print(f"  {group_id}: {name}")
    
    print("\n" + "="*80)
    print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("="*80)
    print("1. üóëÔ∏è  –£–î–ê–õ–ò–¢–¨ space-–≥—Ä—É–ø–ø—ã (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞)")
    print("2. ‚úÖ –û–°–¢–ê–í–ò–¢–¨ board-–≥—Ä—É–ø–ø—ã (–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞)")
    print("3. üîÑ –ü–†–û–î–û–õ–ñ–ò–¢–¨ –º–∏–≥—Ä–∞—Ü–∏—é –≤—Å–µ—Ö –¥–æ—Å–æ–∫ –ø–æ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–µ")

if __name__ == "__main__":
    asyncio.run(main()) 